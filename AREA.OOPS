// 10.
//  Write a C++ program to implement a class called Shape with virtual member functions for calculating area and perimeter. Derive classes such as Circle, Rectangle, and Triangle from the Shape class and override virtual functions accordingly.
#include<iostream>
#include<math.h>
using namespace std;
class Shape{
    public:
    virtual void area()=0;
    virtual void perimeter()=0;
};

class Circle:public Shape{
    public:
    double r;
    Circle(double r){
        this->r=r; 
    }
    void area(){
        cout<<"Area of circle is "<<3.14*r*r<<endl;
    }
    void perimeter(){
        cout<<"Perimeter of circle is "<<2*3.14*r<<endl;
    }
};

class Rectangle:public Shape{
    public:
    double l,b;
    Rectangle(double l,double b){
        this->l=l;
        this->b=b;
    }
    void area(){
        cout<<"Area of rectangle is "<<l*b<<endl;
    }
    void perimeter(){   
        cout<<"Perimeter of rectangle is "<<2*(l+b)<<endl;
    }
    };

class Triangle:public Shape{
    public:
    double a,b,c,s;
    Triangle(double a,double b,double c){
        this->a=a;
        this->b=b;
        this->c=c;
    }
    void area(){
        s=a+b+c/2;
        cout<<"Area of triangle is "<<sqrt(s * (s - a) * (s - b) * (s - c))<<endl;
    }
    void perimeter(){   
        cout<<"Perimeter of triangle is "<<a+b+c<<endl;
    }   
    };

int main(){
    Circle c=Circle(5);
    Rectangle r=Rectangle(4,5);
    Triangle t=Triangle(3,4,5);
    c.area();
    c.perimeter();
    r.area();
    r.perimeter();
    t.area();
    t.perimeter();
    return 0;
}
